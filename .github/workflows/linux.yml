name: linux

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [GCC-11, GCC-12, GCC-13, GCC-14, Clang-16, Clang-17, Clang-18, Clang-19]
        test_with: [Headers, Module]
        build_type: [Debug, Release]

        exclude:
          - compiler: GCC-11
            test_with: Module
          - compiler: GCC-12
            test_with: Module
          - compiler: GCC-13
            test_with: Module
          - compiler: GCC-14
            test_with: Module

        include:
          - compiler: GCC-11
            cxx: g++-11
            install: |
              brew install gcc@11 ninja binutils
              brew link --force binutils
          - compiler: GCC-12
            cxx: g++-12
            install: |
              brew install gcc@12 ninja binutils
              brew link --force binutils
          - compiler: GCC-13
            cxx: g++-13
            install: |
              brew install gcc@13 ninja binutils
              brew link --force binutils
          - compiler: GCC-14
            cxx: g++-14
            install: |
              brew install gcc@14 ninja binutils
              brew link --force binutils
          - compiler: Clang-16
            cxx: $(brew --prefix llvm@16)/bin/clang++
            install: |
              brew install llvm@16 ninja binutils
              brew link --force binutils
          - compiler: Clang-17
            cxx: $(brew --prefix llvm@17)/bin/clang++
            install: |
              brew install llvm@17 ninja binutils
              brew link --force binutils
          - compiler: Clang-18
            cxx: $(brew --prefix llvm@18)/bin/clang++
            install: |
              brew install llvm@18 ninja binutils
              brew link --force binutils
          - compiler: Clang-19
            cxx: $(brew --prefix llvm@19)/bin/clang++
            install: |
              brew install llvm@19 ninja binutils
              brew link --force binutils
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true

    - name: Set up Homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Create Build Environment
      run: |
        ${{matrix.install}}
        cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake -GNinja -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_CXX_COMPILER=${{matrix.cxx}} \
              $GITHUB_WORKSPACE
              
    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .

    - name: Run Unit Tests
      working-directory: ${{runner.workspace}}/build
      run: ./test/tinycoro_tests

    - name: Run Examples
      working-directory: ${{runner.workspace}}/build
      run: ./tinycoro_example

    - name: Run echo server and stress test
      working-directory: ${{runner.workspace}}/build
      run: |
        ./example/echo_server_example/tinycoro_echo_server &
        python ../example/echo_server_example/echo_server_stress_test.py 1000 true &
        wait
