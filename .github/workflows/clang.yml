name: clang_18

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu:22.04

    steps:
    - name: Install Git and other dependencies
      run: |
        apt update -y
        apt install -y git cmake g++ libstdc++-12-dev wget lsb-release software-properties-common
    - name: Install Clang 18 and Dependencies
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        ./llvm.sh 18
        export PATH="/usr/lib/llvm-18/bin:$PATH"
        update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-18 100
        update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 100
        which clang
        which clang++
        clang --version
        clang++ --version
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Add safe repository directory
      run: git config --global --add safe.directory /__w/tinycoro/tinycoro

    - name: Initialize Git submodules
      run: git submodule update --init --recursive
      working-directory: ${{ github.workspace }}

    - name: Configure
      run: |
        cmake -B build -D CMAKE_BUILD_TYPE=Release -D CMAKE_CXX_COMPILER=/usr/bin/clang++ -D CMAKE_C_COMPILER=/usr/bin/clang
      working-directory: ${{ github.workspace }}

    - name: Build
      run: cmake --build build
      working-directory: ${{ github.workspace }}

    - name: Run Unit Tests
      run: ./build/test/tinycoro_tests
      working-directory: ${{ github.workspace }}

    - name: Run Examples
      run: ./build/tinycoro_example
      working-directory: ${{ github.workspace }}
