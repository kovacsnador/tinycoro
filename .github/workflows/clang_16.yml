name: clang_16

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest  # Or any supported runner, used to set up the container environment
    container:
      image: debian:latest  # The container image to use

    steps:
    - uses: actions/checkout@v3

    - name: Install Clang 16, CMake
      run: |
           apt update -y
           apt-get upgrade -y
           apt install -y wget lsb-release software-properties-common
           wget https://apt.llvm.org/llvm-snapshot.gpg.key
           apt-key add llvm-snapshot.gpg.key
           echo "deb http://apt.llvm.org/debian/ llvm-toolchain-debian main" | tee -a /etc/apt/sources.list.d/llvm.list
           apt update -y
           apt install -y clang-16 lld-16 cmake
           update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 100
           update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-16 100
    - name: Add safe repo directory
      run: git config --global --add safe.directory /__w/tinycoro/tinycoro

    - name: Initialize Git submodules
      run: git submodule update --init --recursive
      working-directory: ${{ github.workspace }}

    - name: Configure with coverage flags using Clang
      run: cmake -B build -D CMAKE_BUILD_TYPE=Debug -D CMAKE_CXX_COMPILER=clang++-16 -D CMAKE_C_COMPILER=clang-16 -D WithASAN=ON
      working-directory: ${{ github.workspace }}

    - name: Build
      run: cmake --build build
      working-directory: ${{ github.workspace }}

    - name: Run Unit Tests
      run: ./build/test/tinycoro_tests
      working-directory: ${{ github.workspace }}

    - name: Run Examples
      run: ./build/tinycoro_example
      working-directory: ${{ github.workspace }}
